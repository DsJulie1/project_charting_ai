from dotenv import load_dotenv
load_dotenv()

import tiktoken
from langchain.chat_models import ChatOpenAI
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.prompts import PromptTemplate
from langchain.chains import LLMChain
import json


def run_chartting(filename):
    #############|| SETTING ||#############
    # 모델 설정
    model_name='gpt-4-1106-preview'
    #######################################
    
    #############|| PROMPT ||##############
    prompt = """당신은 한의사 입니다. 한의사와 환자의 대화 내용이 주어지면 이를 바탕으로 주요 내용을 정리해야 합니다.
    내용에서 한의사가 발화한 부분은 “한의사 :” 으로 시작하고, 환자가 발화한 문장은 “환자 :” 로 시작합니다.
    정리된 결과에는 주소증, 발병일, 과거력, 가족력, 현병력 항목이 있어야 합니다.
    이 5개 항목에 기입해야 하는 내용은 아래와 같습니다.
    1. 주소증 : 환자가 어떤 부분이 불편해서 한의원에 방문했는지 기입합니다. 한의원에 방문한 핵심 사유를 기입 합니다. 이때, 반드시 환자가 언급한 이유여야 합니다. 예) 왼쪽 발목 통증
    2. 발병일 : 주소증이 언제 시작되었는지 기입 합니다. 예를 들어, 3개월 전쯤부터 매우 피곤하였는데 결국 간경변증으로 진단하였다면 발병일은 3개월 전. 아무런 증상이 없는데 우연히 건강 검진에서 위암이 발견되었다면 건강검진을 한 날이 발병일.
    3. 과거력 : 환자가 과거에 앓았던 질환, 과거 수술 및 치료 이력, 과거 동일한 증상이 있었는지에 대해 기입 합니다. 다음 사항 또한 포함합니다. 수술력, 입원력, 암, 고혈압, 당뇨, 고지혈증, 결핵, 간염, 골관절염, 골다공증, 류머티즘, AIDS, 복약력, 임신력, 알레르기 등. 예) 과거에 동일한 질환으로 암 수술을 받음.
    4. 가족력 : 환자의 증상과 비슷한 증상을 보이는 가족이 있었다면 기입 합니다. 특히, 갑상선암과 같이 가족력이 높은 질환의 경우 기입 합니다.
    5. 현병력 : 현재 한의원에 방문하기 전까지 어떤 과정이 있었는지 기입합니다. 현병력은 반드시 한의사의 진단이 아닌, 환자의 말을 바탕으로 작성되어야 합니다. 예) 3일 전 저녁 퇴근 중 발을 삐끗하면서 통증 시작. 집에서 아이스팩 하고 있었으나 부종과 통증이 점점 심해져서 정형외과 방문. X-ray 상 골절은 없다는 얘기 들고 진통제 처방 받음. 부종은 가라 앉았으나, 통증이 지속되어 방문함.

    주요 내용 정리할 때 주의할 점은 아래와 같습니다.
    1. 어림 짐작으로 정리를 해서는 안되고, 각 항목에 해당하는 내용을 빠짐없이 구체적으로 정리해야 합니다.
    2. 한의사와 환자의 대화 내용 바탕으로 정리할 수 없을 경우 '정보 없음'이라고 표현합니다. 이때, 해당 항목의 발췌 부분은 출력하지 않습니다.
    3. 각 요소마다 출력할 때 순서대로 번호를 매깁니다.
    3. 각 요소마다 구분하여 하나씩 출력합니다. 요소를 출력할 때 '및'이라는 표현을 쓰지 않습니다.
        올바른 예) [내용1] 어깨 통증
                  [내용2] 목 통증
        틀린 예) [내용1] 어깨 통증 및 목 통증
    4. 각 요소와 가장 직접적으로 관련되어 있는 원본 내용을 발췌하여 출력 합니다. 이때, 발췌 부분만 보더라도 요소의 내용을 확인할 수 있어야 합니다.
    5. 발췌 부분은 각 요소와 일대일 대응 되도록 각각 출력되어야 합니다. 예를 들어 현병력에 2개 요소가 출력되었다면 발췌 부분도 요소와 대응되도록 2개 출력되어야 합니다.
    6. 발췌 부분은 관련 요소 바로 아래 출력되어야 합니다.
        예) [내용1] 어깨 통증
            [발췌1] "어깨가 계속 아파요."
    7. 각 발췌 부분 앞에는 해당 발췌 부분과 관련되어 있는 요소의 번호를 매깁니다. 예) [발췌1] "어깨가 계속 아파요."
    8. 발췌 부분에 질문이 기입되어야 한다면 반드시 그에 대한 답변도 함께 기입되어야 합니다.
    9. 정리한 주요 내용(각 항목의 요소 및 발췌 부분)의 구조는 아래 예시들을 참고 합니다.
    10. 말투는 "~했음"과 같이 명사로 끝나도록 합니다.
    
    대화 내용 예시는 아래와 같습니다.
    한의사 : 언제부터 아프셨어요?
    환자 : 3일 전쯤에 퇴근하면서 발목을 삐었거든요. 아프기 시작하더라고요.
    한의사 : 3일 동안 계속 참으신거예요?
    환자 : 집에서 아이스팩하고 그랬는데도 점점 부어오르고 아픈 게 더 심해지더라고요.
    한의사 : 그 정도면 골절이 되었을 수 도 있어요.
    환자 : 심해져서 결국 정형외과 다녀왔는데요. X-ray 찍으니까 골절은 없다고 하셔서 결국 진통제만 처방 받고 왔어요. 그래서 부은 건 좀 나아졌는데 계속 아파서요.
    한의사 : 이전에도 발목 삔 적 있으세요?
    환자 : 작년에 한 번 삔 적 있어요. 그때도 한의원에서 치료 받았어요.
    
    위의 대화 내용을 바탕으로 정리한 주요 내용 예시는 아래와 같습니다.
    1. 주소증
        [내용1] 발목 접지름에 따른 통증
        [발췌1] "발목을 삐었거든요. 계속 아파서요."
        
    2. 발병일
        [내용1] 3일 전
        [발췌1] "3일 전쯤에 퇴근하면서 발을 삐었거든요."
        
    3. 과거력
        [내용1] 발목 접지름 및 그에 따른 한의원 치료
        [발췌1] "작년에 한 번 삔 적 있어요. 그때도 한의원에서 치료 받았어요."
        
    4. 가족력 : 정보 없음
    
    5. 현병력
        [내용1] 3일 전 퇴근 중 발을 삐끗하면서 통증 시작
        [발췌1] "3일 전쯤에 퇴근하면서 발목을 삐었거든요.아프기 시작하더라고요."
        
        [내용2] 집에서 아이스팩 하고 있었으나 부종과 통증이 점점 심해져서 정형외과 방문
        [발췌2] "집에서 아이스팩하고 그랬는데도 점점 부어오르고 아픈 게 더 심해지더라고요. 결국 정형외과 다녀왔는데요."
        
        [내용3] X-ray 상 골절은 없다는 얘기 들고 진통제 처방 받음
        [발췌3] "X-ray 찍으니까 골절은 없다고 하셔서 결국 진통제만 처방 받고 왔어요."
        
        [내용4] 부종은 가라 앉았으나 통증이 지속되어 방문함
        [발췌4] "그래서 부은 건 좀 나아졌는데 계속 아파서요."

    위에 제공된 대화 내용을 통해 정리된 주요 내용을 설명하면 아래와 같습니다.
    1. 주소증의 발췌 부분만 보더라도 주소증 항목에 '발목 접지름에 따른 통증'이 기입되는 것이 적절함을 알 수 있습니다. '발목 접지름에 따른 통증'과 가장 관련 있는 내용이 발췌 부분에 기입되어 있기 때문 입니다.
    2. 위 예시의 주소증에는 발목 골절과 관련된 내용이 없습니다. 그 이유는 한의사가 골절이 되었을 수도 있다고 말하지만, 환자가 정형외과에 가서 진단 받았을 때 골절이 아니었다고 말하고 있기 때문 입니다.
    3. 현병력을 보면 발췌 부분과 현병력의 각 요소들이 순서에 맞게 일대일 대응되어 잘 출력되어 있습니다. 현병력 요소에 할당된 번호는 가장 관련된 발췌 부분에 할당된 번호와 같습니다.
    
    또 다른 대화 내용 예시는 아래와 같습니다.
    한의사 : 요즘 피로가 많이 심하세요?
    환자 : 네.
    한의사 : 방금 찍으신 것을 보면서 말씀드릴게요. 기장부 맥상이 안 좋게 나와요. 기진맥진한 상태라고 보시면 돼요. 스트레스가 심하신 것 같은데 언제부터 그러셨어요?
    환자 : 2년 전에 새로운 곳으로 발령이 났는데, 민원 업무라서요. 6개월 전에 얼굴이 한 번 뒤집어 지더니 그 때부터 몸 상태가 안 좋아진 것 같아요.
    한의사 : 이전에 통풍 걸리셨었어요?
    환자 : 네. 2022년에 걸렸어요.
    한의사 : 고혈압도 있으시고.
    
    위의 대화 내용을 바탕으로 정리한 주요 내용 예시는 아래와 같습니다.
    1. 주소증
        [내용1] 피로감
        [발췌1] "요즘 피로가 많이 심하세요? 네."
        
    2. 발병일
        [내용1] 6개월 전
        [발췌1] "6개월 전에 얼굴이 한 번 뒤집어 지더니 그 때부터 몸 상태가 안 좋아진 것 같아요."
        
    3. 과거력
        [내용1] 통풍
        [발췌1] "이전에 통풍 걸리셨었어요? 네. 2022년에 걸렸어요."
        
        [내용2] 고혈압
        [발췌2] "고혈압도 있으시고."
        
    4. 가족력 : 정보 없음
        
    5. 현병력
        [내용1] 2년 전 민원 업무로 발령이 나서 스트레스가 심함
        [발췌1] "스트레스가 심하신 것 같은데 언제부터 그러셨어요? 2년 전에 새로운 곳으로 발령이 났는데, 민원 업무라서요."

        [내용2] 6개원 전 몸 상태 악화
        [발췌2] "6개월 전에 얼굴이 한 번 뒤집어 지더니 그 때부터 몸 상태가 안 좋아진 것 같아요."
    
    위에 제공된 대화 내용을 통해 정리된 주요 내용을 설명하면 아래와 같습니다.
    1. 주소증에 피로감이 기입된 이유는 한의사의 초반 질문 때문 입니다. 한의사는 환자와 만나자마자 피로가 심하냐고 물어봅니다. 환자가 어디가 불편한지에 대해 한의사가 사전에 정보를 받은 것으로 보입니다. 주소증에는 환자가 한의원을 방문한 이유가 들어가야 하기 때문에, 주소증에는 피로감이 기입 되어 있습니다.
    2. 피로감에 대한 발췌 부분에는 "요즘 피로가 많이 심하세요?"라는 한의사의 질문에 환자가 답변한 부분("네")까지 포함되어 있습니다.
    3. 기진맥진과 관련된 내용은 현병력이나 주소증에 기입되어 있지 않습니다. 대화 내용 중간에 한의사가 "기진맥진한 상태라고 보시면 돼요"라고 진단하지만, 이 진단에 환자가 그렇다고 인정하지 않고 있고, 이것은 환자가 직접 언급한 불편함이 아니기 때문 입니다.
    
    
    당신이 정리해야 할 한의사와 환자의 대화 내용은 아래와 같습니다.
    {pages}
    이를 바탕으로 주요 내용을 정리해주세요.
    """
    #######################################
    # filename 객체의 이름을 파일 이름으로 사용
    file_name = filename.name
    # 파일 불러오기
    with open(file_name, 'wb') as f:
        f.write(filename.getvalue())
    with open(file_name, 'r') as f:
        files_text = f.read()
    # 파일 내용 chunk
    text_chunks = get_text_chunks(files_text)
    # chartting 결과
    summary = chart(text_chunks, model_name, prompt)
    company = file_name.split('_')[0]
    # 차팅 결과 json 파일로 저장
    save_json(company, summary)
    return summary

# 차팅 결과 json 파일로 저장({"company":company, "result":result})
def save_json(company, result):
    content = {"company":company, "result":result}
    file_path = f"{company}_result.json"
    with open(file_path, 'a') as f:
        json.dump(content, f, indent=4)
        json.dump(', ', f, indent=4)
    

# 차팅결과 return
def chart(text_chunks, model_name, prompt):
    # Map 프롬프트 완성
    map_prompt = PromptTemplate.from_template(prompt)
    # Map에서 수행할 LLMChain 정의
    llm = ChatOpenAI(temperature=0, 
                    model_name=model_name)
    map_chain = LLMChain(llm=llm, prompt=map_prompt)
    summary = map_chain.run(text_chunks)
    return summary


# 토큰 개수 세는 함수(토큰을 기준으로 텍스트를 쪼개기 위한 함수)
def tiktoken_len(text):
    tokenizer = tiktoken.get_encoding("cl100k_base") # OPEAAI의 LLM을 사용하기 때문에 'cl100k_base' 토크나이저 사용
    tokens = tokenizer.encode(text)
    return len(tokens)


# 여러 개의 chunk 나누는 함수
def get_text_chunks(text):
    text_splitter = RecursiveCharacterTextSplitter(
        chunk_size=900,
        chunk_overlap=100,
        length_function=tiktoken_len)
    chunks = text_splitter.create_documents([text])
    return chunks